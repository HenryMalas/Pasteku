-- phpMyAdmin SQL Dump
-- version 3.3.2deb1
-- http://www.phpmyadmin.net
--
-- Servidor: localhost
-- Tiempo de generación: 02-11-2010 a las 13:40:33
-- Versión del servidor: 5.1.41
-- Versión de PHP: 5.3.2-1ubuntu4.2

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Base de datos: `pasteku`
--

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `paste`
--

CREATE TABLE IF NOT EXISTS `paste` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `padre` int(11) DEFAULT NULL,
  `post` text NOT NULL,
  `syntax` varchar(20) NOT NULL,
  `expiracion` char(1) DEFAULT NULL,
  `titulo` varchar(100) DEFAULT NULL,
  `nombre` varchar(50) DEFAULT NULL,
  `email` varchar(50) DEFAULT NULL,
  `creado_at` datetime NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=73 ;

--
-- Volcar la base de datos para la tabla `paste`
--

INSERT INTO `paste` (`id`, `padre`, `post`, `syntax`, `expiracion`, `titulo`, `nombre`, `email`, `creado_at`) VALUES
(2, NULL, 'holap', 'Php', 'm', NULL, 'cam', 'camyo', '2010-07-15 19:50:43'),
(3, NULL, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 21:45:26'),
(6, 3, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 22:13:11'),
(7, 3, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:17:47'),
(8, 7, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n<?php\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:18:24'),
(9, 8, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:18:28'),
(10, 9, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    casa "hola";\r\n$perro = 456;\r\n$perr2o = 4.56;\r\n$parto  = ''jojo'';\r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:19:10'),
(11, 10, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    casa "hola";\r\n$perro = 456;\r\n$perr2o = 4.56;\r\n$parto  = ''jojo'';\r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Plain', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:19:26'),
(12, 11, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    casa "hola";\r\n$perro = 456;\r\n$perr2o = 4.56;\r\n$parto  = ''jojo'';\r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Sql', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:19:46'),
(13, 12, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    casa "hola";\r\n$perro = 456;\r\n$perr2o = 4.56;\r\n$parto  = ''jojo'';\r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Css', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:19:51'),
(14, 13, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    casa "hola";\r\n$perro = 456;\r\n$perr2o = 4.56;\r\n$parto  = ''jojo'';\r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'JScript', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:19:55'),
(15, 14, '\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    casa "hola";\r\n$perro = 456;\r\n$perr2o = 4.56;\r\n$parto  = ''jojo'';\r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'JScript', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:20:03'),
(16, 15, '    //public $logger = true;\r\n    //public $debug = true;\r\n    casa "hola";\r\n$perro = 456;\r\n$perr2o = 4.56;\r\n$parto  = ''jojo'';\r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n}\r\n?>', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-15 23:20:20'),
(17, NULL, 'body.delicious {	font: normal 12px arial, helvetica, arial, verdana;	color: #000;	overflow: hidden;	border: 0px;	}	.delicious div.toolstrip-button {		color: #000;		cursor: hand;		padding: 6px;		border-bottom: 1px solid #eee;		}	.delicious div.toolstrip-button {		color: #000;		cursor: hand;		font: normal 12px helvetica, arial, verdana;		width: 150px;		padding: 6px;		border-bottom: 1px solid #eee;		}		div.toolstrip-button:last-child {border-bottom-style: none;}		.delicious div.toolstrip-button:hover {			background-color: #3274d0;			color: #fff;			}	/*************************	OPTIONS pages	**************************/	.delicious .options h3 {		font-weight: bold;		margin-bottom: 9px;		}		.options small {font-size: 10px; font-family: verdana;}		.message p {padding: 4px;}			p.fail {				background-color: #ff0000;				color: #000;				}			p.success {				background-color: #ffff99;				color: #000;				}	.delicious #bookmarks {		padding: 6px;		}	.delicious #bookmarks h3 {		font-weight: normal;		font-size: 12px;		}	.delicious #bookmarks h3 small {		font-size: 10px;		text-decoration: underline;		}	.delicious #bookmarks ul {		margin: 0;		padding: 0;		list-style: none outside;		}	.delicious #bookmarks li {		margin: 0;		padding: 4px;		line-height: 14px;		list-style: none outside;		}	.delicious #bookmarks li.even {		background-color: #f1f1f1;		}	.delicious #bookmarks li a,	.delicious #bookmarks li a:link {		color: #1259c7;		text-decoration: none;		}	.delicious #bookmarks li a:visited {		color: #515697;		}	.delicious #bookmarks li a:hover,	.delicious #bookmarks li a:active,	.delicious #bookmarks li a:focus {		color: #1259c7;		text-decoration: underline;		}', 'Css', 'm', NULL, 'dormir', NULL, '2010-07-15 23:23:35'),
(18, NULL, '\r\n  <html>\r\n  <body>\r\n      <div style="font-weight: bold"><?= str_replace("n", "<br/>", $var) ?></div>\r\n       \r\n      <?\r\n      /***********************************\r\n       ** Multiline block comments\r\n       **********************************/\r\n       \r\n      $stringWithUrl = "http://alexgorbatchev.com";\r\n      $stringWithUrl = ''http://alexgorbatchev.com'';\r\n           \r\n      ob_start("parseOutputBuffer");      // Start Code Buffering\r\n      session_start();\r\n      ?>\r\n  </body>\r\n  </html>', 'Php', 'm', NULL, 'dormir', 'fdg@fftrla.com', '2010-07-15 23:32:41'),
(19, 18, '  <html>\r\n  <body>\r\n      <div style="font-weight: bold"><?= str_replace("n", "<br/>", $var) ?></div>\r\n       \r\n      <?\r\n      /***********************************\r\n       ** Multiline block comments\r\n       **********************************/\r\n       \r\n      $stringWithUrl = "http://alexgorbatchev.com";\r\n      $stringWithUrl = ''http://alexgorbatchev.com'';\r\n           \r\n      ob_start("parseOutputBuffer");      // Start Code Buffering\r\n      session_start();\r\n      ?>\r\n  </body>\r\n  </html>', 'Xml', 'm', NULL, 'dormir', 'fdg@fftrla.com', '2010-07-15 23:34:47'),
(20, 6, '\r\nclass Paste extends ActiveRecord {\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:12:39'),
(21, 6, '<?php\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:12:51'),
(22, 6, '"<?php"\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n"?>"\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:14:37'),
(23, 6, '''<?php''\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n''?>''\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:15:16'),
(24, 23, '<<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n''?>''\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:15:25'),
(25, 24, '<<<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n''?>''\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:15:30'),
(26, 25, '<<<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n''?>''\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:15:32'),
(27, 26, '<??php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n''?>''\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:15:40'),
(28, 27, '\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n''?>''\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:16:58'),
(29, 27, '<?\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n''?>''\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:19:32'),
(30, 29, '<?\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:19:41'),
(31, 30, '<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:22:55'),
(32, 31, '<? php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:24:28'),
(33, 32, '< ? php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:24:33'),
(34, 33, '< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:24:40'),
(35, 34, '''<'' ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:24:50'),
(36, 35, '<< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:25:17'),
(37, 36, '< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:26:56'),
(38, 37, '<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:27:03'),
(39, 38, '\\<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:27:08'),
(40, 39, '\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:29:46'),
(41, 39, '< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:29:57'),
(42, 41, '< ? php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:30:02'),
(43, 42, '<  php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:30:07'),
(44, 43, '<  php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:30:08'),
(45, 44, '  php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:30:11'),
(46, 44, '?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:30:27'),
(47, 46, '<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:34:17'),
(48, 47, '''<''?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:35:05'),
(49, 48, '<<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:38:21'),
(50, 49, '<< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:38:29'),
(51, 50, '< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:38:48'),
(52, 51, '<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:39:01'),
(53, 52, '< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-16 21:39:36'),
(54, 53, '<span><</span> ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-17 00:59:51'),
(55, 52, '< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-17 14:02:24'),
(56, 55, '&#60;< ?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-17 23:05:57'),
(57, 56, '&#60;?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-17 23:06:04'),
(58, 57, '<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-17 23:16:29'),
(59, 58, '<<<<<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-17 23:16:51'),
(60, 59, '<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-17 23:17:32'),
(61, 39, '<?php\r\n\r\nFlash::error(''hola'');\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\n\r\n}\r\n?>\r\n//jeje\r\n/***\r\nDe lujo ya funciona ahora el css\r\n***/', 'Php', 'e', NULL, 'gfh', 'fdgddd@fftrla.com', '2010-07-18 15:54:10'),
(62, NULL, '<?php\r\n/**\r\n *Controlador de Pacientes\r\n *\r\n *Controlador encargado de gestionar Pacientes y datos propios de los pacientes\r\n *que no son personales como por ejemplo el carnet de vacunas, el plan alimenticio y demas.\r\n */\r\nclass PacienteController extends ApplicationController\r\n{\r\n    /**\r\n     *Muestra listado de pacientes\r\n     *\r\n     *Muesta un listado con los nombres e ID de los pacientes que estan en el sistema\r\n    */\r\n    public function index()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            //$this->lista_pacientes = $this->Paciente->find();\r\n	    $this->result = $this->Paciente->getPacientes();\r\n	    $this->campos = array(''Codigo'' => ''id'',\r\n                            ''Nombres'' => ''nombres'',\r\n                            ''Apellidos'' => ''apellidos'',\r\n                            ''Genero'' => ''genero'');\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra datos sobre un paciente\r\n     *\r\n     *Muestra informacion y datos personales sobre un paciente\r\n     *@param $id ID del paciente que se consulta\r\n    */\r\n    public function view_paciente($id)\r\n    {\r\n	if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n		if(Load::model("Paciente")->exists("id= $id"))\r\n		{\r\n		    $id_persona = Load::model(''Paciente'')->getPersona_id($id);\r\n		    $this->persona = $this->Persona->find($id_persona);\r\n		    \r\n		    //antes de cargar $this->lista_antecedentes se debe comprovar si se tieen acceso a los antecedentes\r\n		    $this->id_paciente = $id;\r\n		    $this->lista_antecedentes = Load::model(''Antecedentes'')->find("paciente_id = $id");\r\n		}\r\n		else\r\n		{\r\n		    $this->redirect("paciente/index");\r\n		}\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n//Vacunas\r\n    /**\r\n     *Crea registro de vacuna\r\n     *\r\n     *Muestra un formulario y captura los datos referentes a una Vacuna\r\n     *Se encarga de alimentar la base de datos con los nombres y las dosis\r\n     *de las vacunas existentes en el mercado\r\n    */\r\n    public function new_vacuna()\r\n    {\r\n	if($this->acceso)\r\n        {\r\n            if($this->has_post(''Vacuna''))\r\n	    {\r\n		$vacuna = new Vacuna($this->post(''Vacuna'')); \r\n		if(!$vacuna->save())\r\n		{\r\n		    Flash::error("No se guardo la Vacuna");\r\n		}\r\n		else\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra un listado de vacunas\r\n     *\r\n     *Muestra un listado de las vacunas que estan disponibles para aplicarse\r\n    */\r\n    public function view_vacunas()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_vacunas = Load::model(''Vacuna'')->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita registro de vacuna\r\n     *\r\n     *Muestra un formulario para que se indiquen lo datos de edicion\r\n     *Edita el registro corrrespondiente a una vacuna\r\n     *@param $id ID de la vacuna que se edita\r\n    */\r\n    public function edit_vacuna($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->vacuna = Load::model(''Vacuna'')->find($id);\r\n            }\r\n            if ($this->has_post(''vacuna''))\r\n            {\r\n            	$vacuna = new Vacuna($this->post(''vacuna''));\r\n                if (!$vacuna->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   $this->vacuna = $this->post(''vacuna'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_vacunas'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Elimina registro de vacuna\r\n     *\r\n     *Elimina el registro de una vacuna mediante su ID\r\n     *@param $id ID de la vacuna que se elimina\r\n    */\r\n    public function del_vacuna($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                $vacuna = Load::model(''Vacuna'')->find($id);\r\n                if (!$vacuna->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_vacunas'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n//END Vacunas\r\n\r\n\r\n//Grupos de antecedentes\r\n    /**\r\n     *Crea un nuevo Grupo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, crean un registro con el nombre\r\n     *de un Grupo de Antecedentes. Se hace con el fin de organizar los antecedentes\r\n    */\r\n    public function new_grupo_antecedente()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''GrupoAntecedente''))\r\n	    {\r\n		$grupo_antecedente = new GrupoAntecedente($this->post(''GrupoAntecedente'')); \r\n		if(!$grupo_antecedente->save())\r\n		{\r\n			Flash::error("No se guardo el Grupo de Antecedentes");\r\n		}\r\n		else\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra Grupos de antecedentes\r\n     *\r\n     *Muestra un listado con los nombres de los Grupos de Antecedentes Existentes\r\n    */\r\n    public function view_grupos_antecedentes()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_grupos = Load::model(''GrupoAntecedente'')->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita un registro de Grupo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, edita el registro asociado al ID\r\n     *@param $id ID del registro que pertence al Grupo de Antecedentes que se edita\r\n    */\r\n    public function edit_grupo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->grupoantecedente = Load::model(''GrupoAntecedente'')->find($id);\r\n            }\r\n            if ($this->has_post(''grupoantecedente''))\r\n            {\r\n            	$grupo = new GrupoAntecedente($this->post(''grupoantecedente''));\r\n                if (!$grupo->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   //$this->recurso = $this->post(''grupoantecedente'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_grupos_antecedentes'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     **Elimina un Grupo de Antecedentes\r\n     *\r\n     *Elimina el registro de un Grupo de Antecedentes siempre y cuando este no tenga Tipos\r\n     *de Antecedentes Asociados.\r\n     *@param $id ID del registro de Grupo de Antecedentes que se elimina\r\n   */\r\n    public function del_grupo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $grupo = Load::model(''GrupoAntecedente'')->find($id);\r\n                if (!$grupo->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_grupos_antecedentes'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n//END Grupos de antecedentes\r\n\r\n\r\n//Tipos de antecedentes\r\n    /**\r\n     *Crea un nuevo Tipo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, crean un registro con el nombre\r\n     *de un Tipo de Antecedente. Se hace con el fin de organizar los antecedentes\r\n    */\r\n    public function new_tipo_antecedente()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''TipoAntecedente''))\r\n	    {\r\n		$tipo = new TipoAntecedente($this->post(''TipoAntecedente'')); \r\n		if(!$tipo->save())\r\n		{\r\n			Flash::error("No se guardo el Tipo de Antecedente");\r\n		}\r\n		else\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra Tipos de antecedentes\r\n     *\r\n     *Muestra un listado con los nombres de los Tipos de Antecedentes Existentes\r\n    */\r\n    public function view_tipos_antecedentes()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_tipos = Load::model(''TipoAntecedente'')->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita un registro de Tipo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, edita el registro asociado al ID\r\n     *@param $id ID del registro que pertence al Tipo de Antecedentes que se edita\r\n    */\r\n    public function edit_tipo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->tipoantecedente = Load::model(''TipoAntecedente'')->find($id);\r\n            }\r\n            if ($this->has_post(''tipoantecedente''))\r\n            {\r\n            	$tipoantecedente = new TipoAntecedente($this->post(''tipoantecedente''));\r\n                if (!$tipoantecedente->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   //$this->recurso = $this->post(''accion'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_tipos_antecedentes'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     **Elimina un Tipo de Antecedentes\r\n     *\r\n     *Elimina el registro de un Tipo de Antecedentes siempre y cuando este no tenga\r\n     *Antecedentes Asociados\r\n     *@param $id ID del registro de Tipo de Antecedentes que se elimina\r\n   */\r\n    public function del_tipo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $tipo = Load::model(''TipoAntecedente'')->find($id);\r\n                if (!$tipo->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_tipos_antecedentes'');    \r\n		}\r\n            }\r\n        }\r\n    }\r\n//END Tipos de antecedentes\r\n\r\n\r\n    /**\r\n     *Muestra foto y nombres del paciente\r\n     *\r\n     *Busca un paciente por ID y pasa a la vista un objeto con el nombre y la foto del mismo\r\n     *@param $id ID del paciente que se busca\r\n    */\r\n    public function getPaciente($id = 0)\r\n    {\r\n        $this->set_response("view");\r\n        if($this->acceso)\r\n        {\r\n            $this->paciente = Load::model("Paciente")->getPaciente($id);\r\n	    $this->ruta = PUBLIC_PATH.''img/personas/''.Load::model("Paciente")->getPersona_id($id).''/'';\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra la historia clinica del paciente\r\n     *\r\n     *Busca un paciente por ID y pasa a la vista un objeto con el nombre y la foto del mismo\r\n     *@param $id ID del paciente que se busca\r\n    */\r\n    public function view_mihistoria()\r\n    {\r\n	if($this->acceso)\r\n        {\r\n        }\r\n    }\r\n\r\n\r\n//Lo que viene a continuacion se debe borrar porque no hace falta,\r\n    //a sido movido al Controller consulta.. pero por si las dudas lo dejare otro rato\r\n    //por ahora solo lo voy a comentar\r\n    \r\n    \r\n/*\r\n//Antecedentes\r\n	//movido hacia Cconsulta\r\n    public function new_antecedente()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''Antecedente''))\r\n            {\r\n        	$antecedente = new Antecedentes($this->post(''Antecedente''));\r\n                $antecedente->paciente_id = $this->get_persistent("paciente_id"); \r\n		if(!$antecedente->save())\r\n		{\r\n			Flash::error("No se guardo el Antecedente");\r\n		}\r\n                else\r\n                {\r\n                    Flash::success("Registro exitoso");\r\n                }\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    public function view_antecedentes()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_antecedentes = Load::model(''Antecedentes'')->find();\r\n        }\r\n    }\r\n    \r\n    //movido hacia Cconsulta\r\n    public function edit_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->antecedente = Load::model(''Antecedentes'')->find($id);\r\n            }\r\n            if ($this->has_post(''antecedente''))\r\n            {\r\n            	$antecedente = new Antecedentes($this->post(''antecedente''));\r\n                if (!$antecedente->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   //$this->recurso = $this->post(''accion'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_antecedentes'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    public function del_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $antecedente = Load::model(''Antecedentes'')->find($id);\r\n                if (!$antecedente->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_antecedentes'');    \r\n		}\r\n            }\r\n        }\r\n    }\r\n    \r\n    //movido hacia Cconsulta\r\n    public function getTipo($grupo = 0)\r\n    {\r\n        $this->set_response("view");\r\n        if($this->acceso)\r\n        {\r\n            $this->grupo_id = $grupo;\r\n        }\r\n    }\r\n*/\r\n    \r\n}\r\n?>', 'Plain', 'm', NULL, 'dormir', 'camyo@ter.com', '2010-07-18 18:54:35');
INSERT INTO `paste` (`id`, `padre`, `post`, `syntax`, `expiracion`, `titulo`, `nombre`, `email`, `creado_at`) VALUES
(63, 62, '<?php\r\n/**\r\n *Controlador de Pacientes\r\n *\r\n *Controlador encargado de gestionar Pacientes y datos propios de los pacientes\r\n *que no son personales como por ejemplo el carnet de vacunas, el plan alimenticio y demas.\r\n */\r\nclass PacienteController extends ApplicationController\r\n{\r\n    /**\r\n     *Muestra listado de pacientes\r\n     *\r\n     *Muesta un listado con los nombres e ID de los pacientes que estan en el sistema\r\n    */\r\n    public function index()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            //$this->lista_pacientes = $this->Paciente->find();\r\n	    $this->result = $this->Paciente->getPacientes();\r\n	    $this->campos = array(''Codigo'' => ''id'',\r\n                            ''Nombres'' => ''nombres'',\r\n                            ''Apellidos'' => ''apellidos'',\r\n                            ''Genero'' => ''genero'');\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra datos sobre un paciente\r\n     *\r\n     *Muestra informacion y datos personales sobre un paciente\r\n     *@param $id ID del paciente que se consulta\r\n    */\r\n    public function view_paciente($id)\r\n    {\r\n	if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n		if(Load::model("Paciente")->exists("id= $id"))\r\n		{\r\n		    $id_persona = Load::model(''Paciente'')->getPersona_id($id);\r\n		    $this->persona = $this->Persona->find($id_persona);\r\n		    \r\n		    //antes de cargar $this->lista_antecedentes se debe comprovar si se tieen acceso a los antecedentes\r\n		    $this->id_paciente = $id;\r\n		    $this->lista_antecedentes = Load::model(''Antecedentes'')->find("paciente_id = $id");\r\n		}\r\n		else\r\n		{\r\n		    $this->redirect("paciente/index");\r\n		}\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n//Vacunas\r\n    /**\r\n     *Crea registro de vacuna\r\n     *\r\n     *Muestra un formulario y captura los datos referentes a una Vacuna\r\n     *Se encarga de alimentar la base de datos con los nombres y las dosis\r\n     *de las vacunas existentes en el mercado\r\n    */\r\n    public function new_vacuna()\r\n    {\r\n	if($this->acceso)\r\n        {\r\n            if($this->has_post(''Vacuna''))\r\n	    {\r\n		$vacuna = new Vacuna($this->post(''Vacuna'')); \r\n		if(!$vacuna->save())\r\n		{\r\n		    Flash::error("No se guardo la Vacuna");\r\n		}\r\n		else\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra un listado de vacunas\r\n     *\r\n     *Muestra un listado de las vacunas que estan disponibles para aplicarse\r\n    */\r\n    public function view_vacunas()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_vacunas = Load::model(''Vacuna'')->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita registro de vacuna\r\n     *\r\n     *Muestra un formulario para que se indiquen lo datos de edicion\r\n     *Edita el registro corrrespondiente a una vacuna\r\n     *@param $id ID de la vacuna que se edita\r\n    */\r\n    public function edit_vacuna($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->vacuna = Load::model(''Vacuna'')->find($id);\r\n            }\r\n            if ($this->has_post(''vacuna''))\r\n            {\r\n            	$vacuna = new Vacuna($this->post(''vacuna''));\r\n                if (!$vacuna->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   $this->vacuna = $this->post(''vacuna'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_vacunas'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Elimina registro de vacuna\r\n     *\r\n     *Elimina el registro de una vacuna mediante su ID\r\n     *@param $id ID de la vacuna que se elimina\r\n    */\r\n    public function del_vacuna($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                $vacuna = Load::model(''Vacuna'')->find($id);\r\n                if (!$vacuna->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_vacunas'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n//END Vacunas\r\n\r\n\r\n//Grupos de antecedentes\r\n    /**\r\n     *Crea un nuevo Grupo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, crean un registro con el nombre\r\n     *de un Grupo de Antecedentes. Se hace con el fin de organizar los antecedentes\r\n    */\r\n    public function new_grupo_antecedente()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''GrupoAntecedente''))\r\n	    {\r\n		$grupo_antecedente = new GrupoAntecedente($this->post(''GrupoAntecedente'')); \r\n		if(!$grupo_antecedente->save())\r\n		{\r\n			Flash::error("No se guardo el Grupo de Antecedentes");\r\n		}\r\n		else\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra Grupos de antecedentes\r\n     *\r\n     *Muestra un listado con los nombres de los Grupos de Antecedentes Existentes\r\n    */\r\n    public function view_grupos_antecedentes()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_grupos = Load::model(''GrupoAntecedente'')->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita un registro de Grupo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, edita el registro asociado al ID\r\n     *@param $id ID del registro que pertence al Grupo de Antecedentes que se edita\r\n    */\r\n    public function edit_grupo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->grupoantecedente = Load::model(''GrupoAntecedente'')->find($id);\r\n            }\r\n            if ($this->has_post(''grupoantecedente''))\r\n            {\r\n            	$grupo = new GrupoAntecedente($this->post(''grupoantecedente''));\r\n                if (!$grupo->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   //$this->recurso = $this->post(''grupoantecedente'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_grupos_antecedentes'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     **Elimina un Grupo de Antecedentes\r\n     *\r\n     *Elimina el registro de un Grupo de Antecedentes siempre y cuando este no tenga Tipos\r\n     *de Antecedentes Asociados.\r\n     *@param $id ID del registro de Grupo de Antecedentes que se elimina\r\n   */\r\n    public function del_grupo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $grupo = Load::model(''GrupoAntecedente'')->find($id);\r\n                if (!$grupo->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_grupos_antecedentes'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n//END Grupos de antecedentes\r\n\r\n\r\n//Tipos de antecedentes\r\n    /**\r\n     *Crea un nuevo Tipo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, crean un registro con el nombre\r\n     *de un Tipo de Antecedente. Se hace con el fin de organizar los antecedentes\r\n    */\r\n    public function new_tipo_antecedente()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''TipoAntecedente''))\r\n	    {\r\n		$tipo = new TipoAntecedente($this->post(''TipoAntecedente'')); \r\n		if(!$tipo->save())\r\n		{\r\n			Flash::error("No se guardo el Tipo de Antecedente");\r\n		}\r\n		else\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra Tipos de antecedentes\r\n     *\r\n     *Muestra un listado con los nombres de los Tipos de Antecedentes Existentes\r\n    */\r\n    public function view_tipos_antecedentes()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_tipos = Load::model(''TipoAntecedente'')->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita un registro de Tipo de Antecedentes\r\n     *\r\n     *Muestra un formulario y captura los datos, edita el registro asociado al ID\r\n     *@param $id ID del registro que pertence al Tipo de Antecedentes que se edita\r\n    */\r\n    public function edit_tipo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->tipoantecedente = Load::model(''TipoAntecedente'')->find($id);\r\n            }\r\n            if ($this->has_post(''tipoantecedente''))\r\n            {\r\n            	$tipoantecedente = new TipoAntecedente($this->post(''tipoantecedente''));\r\n                if (!$tipoantecedente->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   //$this->recurso = $this->post(''accion'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_tipos_antecedentes'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     **Elimina un Tipo de Antecedentes\r\n     *\r\n     *Elimina el registro de un Tipo de Antecedentes siempre y cuando este no tenga\r\n     *Antecedentes Asociados\r\n     *@param $id ID del registro de Tipo de Antecedentes que se elimina\r\n   */\r\n    public function del_tipo_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $tipo = Load::model(''TipoAntecedente'')->find($id);\r\n                if (!$tipo->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_tipos_antecedentes'');    \r\n		}\r\n            }\r\n        }\r\n    }\r\n//END Tipos de antecedentes\r\n\r\n\r\n    /**\r\n     *Muestra foto y nombres del paciente\r\n     *\r\n     *Busca un paciente por ID y pasa a la vista un objeto con el nombre y la foto del mismo\r\n     *@param $id ID del paciente que se busca\r\n    */\r\n    public function getPaciente($id = 0)\r\n    {\r\n        $this->set_response("view");\r\n        if($this->acceso)\r\n        {\r\n            $this->paciente = Load::model("Paciente")->getPaciente($id);\r\n	    $this->ruta = PUBLIC_PATH.''img/personas/''.Load::model("Paciente")->getPersona_id($id).''/'';\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra la historia clinica del paciente\r\n     *\r\n     *Busca un paciente por ID y pasa a la vista un objeto con el nombre y la foto del mismo\r\n     *@param $id ID del paciente que se busca\r\n    */\r\n    public function view_mihistoria()\r\n    {\r\n	if($this->acceso)\r\n        {\r\n        }\r\n    }\r\n\r\n\r\n//Lo que viene a continuacion se debe borrar porque no hace falta,\r\n    //a sido movido al Controller consulta.. pero por si las dudas lo dejare otro rato\r\n    //por ahora solo lo voy a comentar\r\n    \r\n    \r\n/*\r\n//Antecedentes\r\n	//movido hacia Cconsulta\r\n    public function new_antecedente()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''Antecedente''))\r\n            {\r\n        	$antecedente = new Antecedentes($this->post(''Antecedente''));\r\n                $antecedente->paciente_id = $this->get_persistent("paciente_id"); \r\n		if(!$antecedente->save())\r\n		{\r\n			Flash::error("No se guardo el Antecedente");\r\n		}\r\n                else\r\n                {\r\n                    Flash::success("Registro exitoso");\r\n                }\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    public function view_antecedentes()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_antecedentes = Load::model(''Antecedentes'')->find();\r\n        }\r\n    }\r\n    \r\n    //movido hacia Cconsulta\r\n    public function edit_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciï¿½n\r\n                $this->antecedente = Load::model(''Antecedentes'')->find($id);\r\n            }\r\n            if ($this->has_post(''antecedente''))\r\n            {\r\n            	$antecedente = new Antecedentes($this->post(''antecedente''));\r\n                if (!$antecedente->update())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   //$this->recurso = $this->post(''accion'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''paciente/view_antecedentes'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    public function del_antecedente($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $antecedente = Load::model(''Antecedentes'')->find($id);\r\n                if (!$antecedente->delete())\r\n                {\r\n                    Flash::error(''Fallï¿½ Operaciï¿½n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''paciente/view_antecedentes'');    \r\n		}\r\n            }\r\n        }\r\n    }\r\n    \r\n    //movido hacia Cconsulta\r\n    public function getTipo($grupo = 0)\r\n    {\r\n        $this->set_response("view");\r\n        if($this->acceso)\r\n        {\r\n            $this->grupo_id = $grupo;\r\n        }\r\n    }\r\n*/\r\n    \r\n}\r\n?>', 'Php', 'm', NULL, 'dormir', 'camyo@ter.com', '2010-07-18 18:54:55'),
(64, NULL, 'textarea { \r\nwidth: 800px;\r\nheight: 400px;\r\nmargin-top: 10px;\r\nmargin-right: 10px;\r\nmargin-bottom: 10px;\r\nmargin-left: 0px;\r\n}\r\nbienvenida.css\r\n* { \r\nmargin-top: 0px [overridden];\r\nmargin-right: 0px [overridden];\r\nmargin-bottom: 0px [overridden];\r\nmargin-left: 0px [overridden];\r\npadding-top: 0px;\r\npadding-right: 0px;\r\npadding-bottom: 0px;\r\npadding-left: 0px;\r\n}\r\ndefault values\r\ntextarea { \r\ncolor: #000000;\r\nfont-size: 12px;\r\ntext-align: default;\r\nline-height: normal;\r\nfont-family: use-lang-def;\r\nfont-weight: 400;\r\npadding-top: 1px [overridden];\r\ntext-indent: 0px;\r\npadding-left: 1px [overridden];\r\npadding-right: 1px [overridden];\r\npadding-bottom: 1px [overridden];\r\ntext-transform: none;\r\nborder-top-width: 2px;\r\nborder-left-width: 2px;\r\nborder-right-width: 2px;\r\nborder-bottom-width: 2px;\r\n}', 'Css', 'e', NULL, NULL, NULL, '2010-07-19 00:23:50'),
(65, 64, 'textarea { \r\nwidth: 800px;\r\nheight: 400px;\r\nmargin-top: 10px;\r\nmargin-right: 10px;\r\nmargin-bottom: 10px;\r\nmargin-left: 0px;\r\n}\r\n/*bienvenida.css*/\r\n* { \r\nmargin-top: 0px [overridden];\r\nmargin-right: 0px [overridden];\r\nmargin-bottom: 0px [overridden];\r\nmargin-left: 0px [overridden];\r\npadding-top: 0px;\r\npadding-right: 0px;\r\npadding-bottom: 0px;\r\npadding-left: 0px;\r\n}\r\n/**default values*/\r\ntextarea { \r\ncolor: #000000;\r\nfont-size: 12px;\r\ntext-align: default;\r\nline-height: normal;\r\nfont-family: use-lang-def;\r\nfont-weight: 400;\r\npadding-top: 1px [overridden];\r\ntext-indent: 0px;\r\npadding-left: 1px [overridden];\r\npadding-right: 1px [overridden];\r\npadding-bottom: 1px [overridden];\r\ntext-transform: none;\r\nborder-top-width: 2px;\r\nborder-left-width: 2px;\r\nborder-right-width: 2px;\r\nborder-bottom-width: 2px;\r\n}', 'Css', 'e', NULL, 'camto', 'camto@gmail.com', '2010-07-19 00:24:38'),
(66, NULL, 'este template pinta bien :)', 'Plain', 'n', NULL, 'Onizukar', 'fdgddd@fftrla.com', '2010-07-22 20:57:27'),
(67, NULL, 'body{\r\n    /*background-color: #CABAB0;*/\r\n}\r\n#header{\r\n    font-family: "Lucida Sans Unicode", sans-serif;\r\n    background-color: #201E13;\r\n    padding: 5px 0px 20px 20px;\r\n    border-bottom-style: dotted;\r\n    border-bottom-width: 5px;\r\n    border-bottom-color: #FFF;    \r\n    -moz-border-bottom-right-radius: 15px;\r\n    -moz-border-bottom-left-radius: 15px;\r\n    -webkit-border-bottom-right-radius: 15px;\r\n    -webkit-border-bottom-left-radius: 15px;\r\n}\r\n\r\n#header h1{\r\n    font-size:5em;\r\n    color: #00A8FF;\r\n    text-shadow: #FFFFFF 2px -2px 2px;\r\n    /*text-shadow: 0px 1px 0px #e5e5ee;  */\r\n}\r\n\r\n#header h1:hover a:hover{\r\n    color: #FFFFFF;\r\n    text-shadow: #0072B0 6px -2px 4px;\r\n}\r\n\r\n#header h2{\r\n    font-size:1.5em;\r\n    color: #00A8FF;\r\n    text-shadow: 0px 1px 0px #e5e5ee; \r\n}\r\n\r\n#content {\r\n    display: block;\r\n    margin: 10px 30px 0px 30px;\r\n    box-shadow:10px 2px 2px #1D8BC2;\r\n}\r\n\r\n#coderZone{\r\n    background-color: #98DCFD;\r\n    padding: 10px;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n}\r\n\r\n#versiones {\r\n    padding: 10px 30px;\r\n}\r\n#versiones ol {\r\n    padding: 5px 35px;\r\n}\r\n\r\n#menuH{\r\n    float: right;\r\n}\r\n#menuH li {\r\n    font-size: 1.2em;\r\n    text-decoration:none;\r\n    display:block;\r\n    float:left;\r\n    padding:5px 10px 5px 10px;\r\n}\r\n#menuH li a:hover{\r\n    color:#074a64;\r\n    border-bottom:2px solid #0b6f95;\r\n}\r\n\r\n#footer {\r\n    margin-top: 20px;\r\n    background-color: #074a64;\r\n    border-top: 4px solid #555555;\r\n    color: white;\r\n    padding: 1em;\r\n    height: 30px;\r\n    font-size: 1em;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n\r\n\r\na {\r\n    color: #00A8FF;\r\n}\r\n\r\nh2{\r\n    font-size: 2em;\r\n    font-style: italic;\r\n}\r\n\r\nfieldset{\r\n    padding: 10px 30px 0px 30px;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n    margin: 20px 0px;\r\n}\r\n\r\nlegend {\r\n    padding: 10px 15px 10px 10px;\r\n    font-size:2em;\r\n    color: #0072B0;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n    border-style: ridge;\r\n}\r\n\r\ntextarea {\r\n\r\n    margin-left: 10px;\r\n    width: 100%;\r\n    height: 300px;\r\n    margin: 10px 10px 10px 0px;\r\n}\r\n\r\ninput{\r\n    margin: 10px 0px 0px 15px;\r\n    padding: 7px;\r\n    font-size: 1em;\r\n\r\n}\r\n\r\nselect {\r\n    padding: 7px 15px 7px 15px;\r\n    font-size:1em;\r\n    margin: 10px 100px 5px 5px;\r\n}\r\n', 'Css', 'n', NULL, 'Onizukar', 'camyo@ter.com', '2010-07-22 23:07:27'),
(68, 67, 'body{\r\n    /*background-color: #CABAB0;*/\r\n}\r\n#header{\r\n    font-family: "Lucida Sans Unicode", sans-serif;\r\n    background-color: #201E13;\r\n    padding: 5px 0px 20px 20px;\r\n    border-bottom-style: dotted;\r\n    border-bottom-width: 5px;\r\n    border-bottom-color: #FFF;    \r\n    -moz-border-bottom-right-radius: 15px;\r\n    -moz-border-bottom-left-radius: 15px;\r\n    -webkit-border-bottom-right-radius: 15px;\r\n    -webkit-border-bottom-left-radius: 15px;\r\n}\r\n#header h1{\r\n    font-size:5em;\r\n    color: #00A8FF;\r\n    text-shadow: #FFFFFF 2px -2px 2px;\r\n    /*text-shadow: 0px 1px 0px #e5e5ee;  */\r\n}\r\n#header h1:hover a:hover{\r\n    color: #FFFFFF;\r\n    text-shadow: #0072B0 6px -2px 4px;\r\n}\r\n#header h2{\r\n    font-size:1.5em;\r\n    color: #00A8FF;\r\n    text-shadow: 0px 1px 0px #e5e5ee; \r\n}\r\n\r\n#content {\r\n    display: block;\r\n    margin: 10px 30px 0px 30px;\r\n    box-shadow:10px 2px 2px #1D8BC2;\r\n}\r\n\r\n#coderZone{\r\n    background-color: #98DCFD;\r\n    padding: 10px;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n}\r\n\r\n#versiones {\r\n    padding: 10px 30px;\r\n}\r\n#versiones ol {\r\n    padding: 5px 35px;\r\n}\r\n\r\n#menuH{\r\n    float: right;\r\n}\r\n#menuH li {\r\n    font-size: 1.2em;\r\n    text-decoration:none;\r\n    display:block;\r\n    float:left;\r\n    padding:5px 10px 5px 10px;\r\n}\r\n#menuH li a:hover{\r\n    color:#074a64;\r\n    border-bottom:2px solid #0b6f95;\r\n}\r\n\r\n#footer {\r\n    margin-top: 20px;\r\n    background-color: #074a64;\r\n    border-top: 4px solid #555555;\r\n    color: white;\r\n    padding: 1em;\r\n    height: 30px;\r\n    font-size: 1em;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n\r\n\r\na {\r\n    color: #00A8FF;\r\n}\r\n\r\nh2{\r\n    font-size: 2em;\r\n    font-style: italic;\r\n}\r\n\r\nfieldset{\r\n    padding: 10px 30px 0px 30px;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n    margin: 20px 0px;\r\n}\r\n\r\nlegend {\r\n    padding: 10px 15px 10px 10px;\r\n    font-size:2em;\r\n    color: #0072B0;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n    border-style: ridge;\r\n}\r\n\r\ntextarea {\r\n\r\n    margin-left: 10px;\r\n    width: 100%;\r\n    height: 300px;\r\n    margin: 10px 10px 10px 0px;\r\n}\r\n\r\ninput{\r\n    margin: 10px 0px 0px 15px;\r\n    padding: 7px;\r\n    font-size: 1em;\r\n\r\n}\r\n\r\nselect {\r\n    padding: 7px 15px 7px 15px;\r\n    font-size:1em;\r\n    margin: 10px 100px 5px 5px;\r\n}\r\n', 'Css', 'n', NULL, 'Onizukar', 'camyo@ter.com', '2010-07-22 23:08:27'),
(69, 68, 'body{\r\n    /*background-color: #CABAB0;*/\r\n}\r\n\r\n#header{\r\n    font-family: "Lucida Sans Unicode", sans-serif;\r\n    background-color: #201E13;\r\n    padding: 5px 0px 20px 20px;\r\n    border-bottom-style: dotted;\r\n    border-bottom-width: 5px;\r\n    border-bottom-color: #FFF;    \r\n    -moz-border-bottom-right-radius: 15px;\r\n    -moz-border-bottom-left-radius: 15px;\r\n    -webkit-border-bottom-right-radius: 15px;\r\n    -webkit-border-bottom-left-radius: 15px;\r\n}\r\n#header h1{\r\n    font-size:5em;\r\n    color: #00A8FF;\r\n    text-shadow: #FFFFFF 2px -2px 2px;\r\n    /*text-shadow: 0px 1px 0px #e5e5ee;  */\r\n}\r\n#header h1:hover a:hover{\r\n    color: #FFFFFF;\r\n    text-shadow: #0072B0 6px -2px 4px;\r\n}\r\n#header h2{\r\n    font-size:1.5em;\r\n    color: #00A8FF;\r\n    text-shadow: 0px 1px 0px #e5e5ee; \r\n}\r\n\r\n#content {\r\n    display: block;\r\n    margin: 10px 30px 0px 30px;\r\n    box-shadow:10px 2px 2px #1D8BC2;\r\n}\r\n\r\n#coderZone{\r\n    background-color: #98DCFD;\r\n    padding: 10px;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n}\r\n\r\n#versiones {\r\n    padding: 10px 30px;\r\n}\r\n#versiones ol {\r\n    padding: 5px 35px;\r\n}\r\n\r\n#menuH{\r\n    float: right;\r\n}\r\n#menuH li {\r\n    font-size: 1.2em;\r\n    text-decoration:none;\r\n    display:block;\r\n    float:left;\r\n    padding:5px 10px 5px 10px;\r\n}\r\n#menuH li a:hover{\r\n    color:#074a64;\r\n    border-bottom:2px solid #0b6f95;\r\n}\r\n\r\n#footer {\r\n    margin-top: 20px;\r\n    background-color: #074a64;\r\n    border-top: 4px solid #555555;\r\n    color: white;\r\n    padding: 1em;\r\n    height: 30px;\r\n    font-size: 1em;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n\r\n\r\na {\r\n    color: #00A8FF;\r\n}\r\n\r\nh2{\r\n    font-size: 2em;\r\n    font-style: italic;\r\n}\r\n\r\nfieldset{\r\n    padding: 10px 30px 0px 30px;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n    margin: 20px 0px;\r\n}\r\n\r\nlegend {\r\n    padding: 10px 15px 10px 10px;\r\n    font-size:2em;\r\n    color: #0072B0;\r\n    -moz-border-radius: 10px;\r\n    -webkit-border-radius: 10px;\r\n    border-style: ridge;\r\n}\r\n\r\ntextarea {\r\n\r\n    margin-left: 10px;\r\n    width: 100%;\r\n    height: 300px;\r\n    margin: 10px 10px 10px 0px;\r\n}\r\n\r\ninput{\r\n    margin: 10px 0px 0px 15px;\r\n    padding: 7px;\r\n    font-size: 1em;\r\n\r\n}\r\n\r\nselect {\r\n    padding: 7px 15px 7px 15px;\r\n    font-size:1em;\r\n    margin: 10px 100px 5px 5px;\r\n}\r\n', 'Css', 'n', NULL, 'Onizukar', 'camyo@ter.com', '2010-07-22 23:08:43'),
(70, 6, '<?php\r\nclass Paste extends ActiveRecord {\r\n    //public $logger = true;\r\n    //public $debug = true;\r\n    \r\n    public function initialize(){\r\n        $this->validates_email_in(''email'');\r\n    }\r\nya con toggle\r\n}\r\n?>\r\n//jeje', 'Php', 'd', NULL, 'gfh', 'fdg@fftrla.com', '2010-07-29 00:48:50'),
(71, NULL, '<?php\r\n/**\r\n *Controlador de Articulos\r\n *\r\n *Controlador encargado de gestionar Articulos y Categorias\r\n */\r\nclass BlogController extends ApplicationController\r\n{\r\n    /**\r\n     *Muestra una pagina de la portada\r\n     *\r\n     *Muestra una pagina de la portada de noticias, con articulos estructurados ordenados por fecha de publicacion\r\n     *@param integer $pagina NÃºmero de pagina que se muestra en portada\r\n    */\r\n    public function index($pagina = 1)\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->list_blog = Load::model(''Articulo'')->getBlogs($pagina);\r\n            $this->categorias = Load::model(''CategoriaArticulo'')->find("order: nombre");\r\n        }\r\n    }\r\n    \r\n    /**\r\n     *Muestra un articulo completo\r\n     *\r\n     *Muestra un Articulo completo segun el ID del articulo\r\n     *@param integer $articulo ID del Articulo que se mostrara\r\n    */\r\n    public function articulo($articulo = 0)\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->item = Load::model(''Articulo'')->find_first($articulo);    \r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Crea un articulo\r\n     *\r\n     *Muestra formulario de creacion de articulo, Almacena el articulo\r\n    */\r\n    public function new_articulo()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''Articulo''))\r\n	    {\r\n		$articulo = new Articulo($this->post(''Articulo''));\r\n                $identidad = Auth::get_active_identity();\r\n                $articulo->persona_id = $identidad["persona_id"];\r\n                //obtener de la identidad el id de cuenta\r\n		if(!$articulo->save())\r\n		{\r\n		    Flash::error("No se guardo la Categoria");\r\n		}\r\n		else //osea que si se guardo :)\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n                    $this->redirect(''blog/index'');\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita un Articulo\r\n     *\r\n     *Muestra formulario de edicion para el Articulo, actualiza el Articulo existente\r\n     *@param integer $id ID del Articulo que se edita\r\n    */\r\n    public function edit_articulo($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciÃ³n\r\n                $this->articulo = Load::model("Articulo")->find($id);\r\n            }\r\n            if ($this->has_post(''articulo''))\r\n            {\r\n            	$articulo = new Articulo($this->post(''articulo''));\r\n                if (!$articulo->update())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   $this->articulo = $this->post(''articulo'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''blog/index'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Elimina un Articulo\r\n     *\r\n     *Elimina un Articulo existente\r\n     *@param integer $id ID del Articulo que se elimina\r\n    */\r\n    public function del_articulo($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $articulo = Load::model("Articulo")->find($id);\r\n                if (!$articulo->delete())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''blog/index'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Busca articulos previamente publicados\r\n     *\r\n     *Muestra formulario de Busqueda de articulos, Busca el articulo y muestra listado de articulos conincidentes con el criterio de busqueda\r\n    */\r\n    public function buscar()\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            if($this->has_post(''Buscar''))\r\n            {\r\n                $clave = $this->post(''Buscar.clave'');\r\n                $this->list_blog = Load::model(''Articulo'')->buscar($clave);\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n//Categorias\r\n    /**\r\n     *Crea una Categoria\r\n     *\r\n     *Muestra formulario de creacion de Categoria, Almacena la Categoria\r\n    */\r\n    public function new_categoria()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''Categoria''))\r\n	    {\r\n		$categoria = new CategoriaArticulo($this->post(''Categoria''));\r\n		if(!$categoria->save())\r\n		{\r\n		    Flash::error("No se guardo la Categoria");\r\n		}\r\n		else //osea que si se guardo :)\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra listado de Categorias\r\n     *\r\n     *Muestra una tabla con los nombres de las Categorias existentes\r\n    */\r\n    public function view_categorias()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_categorias = Load::model("CategoriaArticulo")->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita una Categoria\r\n     *\r\n     *Muestra formulario de edicion para la Categoria, actualiza la Categoria existente\r\n     *@param integer $id ID de la Categoria que se edita\r\n    */\r\n    public function edit_categoria($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciÃ³n\r\n                $this->Categoria = Load::model("CategoriaArticulo")->find($id);\r\n            }\r\n            if ($this->has_post(''Categoria''))\r\n            {\r\n            	$Categoria = new CategoriaArticulo($this->post(''Categoria''));\r\n                if (!$Categoria->update())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   $this->Categoria = $this->post(''Categoria'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''blog/view_categorias'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Elimina una Categoria\r\n     *\r\n     *Elimina una Categoria existente siempre y cuando la categoria no tenga ninguna Articulo asociado\r\n     *@param integer $id ID de la Categoria que se elimina\r\n    */\r\n    public function del_categoria($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $categoria = Load::model("CategoriaArticulo")->find($id);\r\n                if (!$categoria->delete())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''blog/view_categorias'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra articulos previamente publicados filtrados por Categoria\r\n     *\r\n     *Muestra articulos previamente publicados filtrados por el nombre de una Categoria\r\n     *@param string $nombre Nombre de la Categoria a filtrar\r\n    */\r\n    public function categoria($nombre)\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->catego = $nombre;\r\n            $this->articulosC = Load::model(''Articulo'')->articulos_por_categoria($nombre);\r\n        }\r\n        $this->categorias = Load::model(''CategoriaArticulo'')->find("order: nombre");\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra articulos en feed\r\n     *\r\n     *Muestra los 5 ultimos articulos publicados en el blog a modo de feed\r\n    */\r\n    public function feed()\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->set_response("view");\r\n            $this->list_blog = Load::model(''Articulo'')->feed();\r\n        }\r\n    }\r\n}\r\n?>', 'Php', 'n', NULL, 'Onizukar', 'fdgddd@fftrla.com', '2010-07-29 01:37:07'),
(72, 71, '<?php\r\n/**\r\n *Controlador de Articulos\r\n *  version 2\r\n *Controlador encargado de gestionar Articulos y Categorias\r\n */\r\nclass BlogController extends ApplicationController\r\n{\r\n    /**\r\n     *Muestra una pagina de la portada\r\n     *\r\n     *Muestra una pagina de la portada de noticias, con articulos estructurados ordenados por fecha de publicacion\r\n     *@param integer $pagina NÃºmero de pagina que se muestra en portada\r\n    */\r\n    public function index($pagina = 1)\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->list_blog = Load::model(''Articulo'')->getBlogs($pagina);\r\n            $this->categorias = Load::model(''CategoriaArticulo'')->find("order: nombre");\r\n        }\r\n    }\r\n    \r\n    /**\r\n     *Muestra un articulo completo\r\n     *\r\n     *Muestra un Articulo completo segun el ID del articulo\r\n     *@param integer $articulo ID del Articulo que se mostrara\r\n    */\r\n    public function articulo($articulo = 0)\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->item = Load::model(''Articulo'')->find_first($articulo);    \r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Crea un articulo\r\n     *\r\n     *Muestra formulario de creacion de articulo, Almacena el articulo\r\n    */\r\n    public function new_articulo()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''Articulo''))\r\n	    {\r\n		$articulo = new Articulo($this->post(''Articulo''));\r\n                $identidad = Auth::get_active_identity();\r\n                $articulo->persona_id = $identidad["persona_id"];\r\n                //obtener de la identidad el id de cuenta\r\n		if(!$articulo->save())\r\n		{\r\n		    Flash::error("No se guardo la Categoria");\r\n		}\r\n		else //osea que si se guardo :)\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n                    $this->redirect(''blog/index'');\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita un Articulo\r\n     *\r\n     *Muestra formulario de edicion para el Articulo, actualiza el Articulo existente\r\n     *@param integer $id ID del Articulo que se edita\r\n    */\r\n    public function edit_articulo($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciÃ³n\r\n                $this->articulo = Load::model("Articulo")->find($id);\r\n            }\r\n            if ($this->has_post(''articulo''))\r\n            {\r\n            	$articulo = new Articulo($this->post(''articulo''));\r\n                if (!$articulo->update())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   $this->articulo = $this->post(''articulo'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''blog/index'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Elimina un Articulo\r\n     *\r\n     *Elimina un Articulo existente\r\n     *@param integer $id ID del Articulo que se elimina\r\n    */\r\n    public function del_articulo($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $articulo = Load::model("Articulo")->find($id);\r\n                if (!$articulo->delete())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''blog/index'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Busca articulos previamente publicados\r\n     *\r\n     *Muestra formulario de Busqueda de articulos, Busca el articulo y muestra listado de articulos conincidentes con el criterio de busqueda\r\n    */\r\n    public function buscar()\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            if($this->has_post(''Buscar''))\r\n            {\r\n                $clave = $this->post(''Buscar.clave'');\r\n                $this->list_blog = Load::model(''Articulo'')->buscar($clave);\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n//Categorias\r\n    /**\r\n     *Crea una Categoria\r\n     *\r\n     *Muestra formulario de creacion de Categoria, Almacena la Categoria\r\n    */\r\n    public function new_categoria()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if($this->has_post(''Categoria''))\r\n	    {\r\n		$categoria = new CategoriaArticulo($this->post(''Categoria''));\r\n		if(!$categoria->save())\r\n		{\r\n		    Flash::error("No se guardo la Categoria");\r\n		}\r\n		else //osea que si se guardo :)\r\n		{\r\n		    Flash::success("Registro exitoso");\r\n		}\r\n     	    }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra listado de Categorias\r\n     *\r\n     *Muestra una tabla con los nombres de las Categorias existentes\r\n    */\r\n    public function view_categorias()\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            $this->lista_categorias = Load::model("CategoriaArticulo")->find();\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Edita una Categoria\r\n     *\r\n     *Muestra formulario de edicion para la Categoria, actualiza la Categoria existente\r\n     *@param integer $id ID de la Categoria que se edita\r\n    */\r\n    public function edit_categoria($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id != null)\r\n            {\r\n                //Aplicando la autocarga de objeto, para comenzar la ediciÃ³n\r\n                $this->Categoria = Load::model("CategoriaArticulo")->find($id);\r\n            }\r\n            if ($this->has_post(''Categoria''))\r\n            {\r\n            	$Categoria = new CategoriaArticulo($this->post(''Categoria''));\r\n                if (!$Categoria->update())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                    //se hacen persistente los datos en el formulario\r\n                   $this->Categoria = $this->post(''Categoria'');\r\n                }\r\n                else\r\n                {\r\n                    Flash::success("Actualizacion exitosa");\r\n                    $this->redirect(''blog/view_categorias'');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Elimina una Categoria\r\n     *\r\n     *Elimina una Categoria existente siempre y cuando la categoria no tenga ninguna Articulo asociado\r\n     *@param integer $id ID de la Categoria que se elimina\r\n    */\r\n    public function del_categoria($id = null)\r\n    {\r\n        if($this->acceso)\r\n        {\r\n            if ($id)\r\n            {\r\n                //Buscando el Objeto a Borrar\r\n                $categoria = Load::model("CategoriaArticulo")->find($id);\r\n                if (!$categoria->delete())\r\n                {\r\n                    Flash::error(''FallÃ³ OperaciÃ³n'');\r\n                }\r\n		else\r\n		{\r\n		    Flash::success("Eliminacion exitosa");\r\n		    $this->redirect(''blog/view_categorias'');\r\n		}\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra articulos previamente publicados filtrados por Categoria\r\n     *\r\n     *Muestra articulos previamente publicados filtrados por el nombre de una Categoria\r\n     *@param string $nombre Nombre de la Categoria a filtrar\r\n    */\r\n    public function categoria($nombre)\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->catego = $nombre;\r\n            $this->articulosC = Load::model(''Articulo'')->articulos_por_categoria($nombre);\r\n        }\r\n        $this->categorias = Load::model(''CategoriaArticulo'')->find("order: nombre");\r\n    }\r\n    \r\n    \r\n    /**\r\n     *Muestra articulos en feed\r\n     *\r\n     *Muestra los 5 ultimos articulos publicados en el blog a modo de feed\r\n    */\r\n    public function feed()\r\n    {\r\n        //if($this->acceso)\r\n        {\r\n            $this->set_response("view");\r\n            $this->list_blog = Load::model(''Articulo'')->feed();\r\n        }\r\n    }\r\n}\r\n?>', 'Php', 'n', NULL, 'Onizukar', 'fdgddd@fftrla.com', '2010-07-29 01:37:38');
